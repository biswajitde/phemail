{
  "name": "vaibhavpandeyvpz/phemail",
  "tagline": "MIME parser written in pure PHP for parsing raw emails (.eml) files.",
  "body": "# vaibhavpandeyvpz/phemail\r\nMIME parser written in pure [PHP](http://www.php.net/) for parsing raw emails (.eml) files.\r\n\r\n[![Latest Version](https://img.shields.io/github/release/vaibhavpandeyvpz/phemail.svg?style=flat-square)](https://github.com/vaibhavpandeyvpz/phemail/releases) [![Build Status](https://img.shields.io/travis/vaibhavpandeyvpz/phemail/master.svg?style=flat-square)](https://travis-ci.org/vaibhavpandeyvpz/phemail) [![SensioLabsInsight](https://insight.sensiolabs.com/projects/c6f2e35b-2349-452e-b696-17849c5695e0/mini.png)](https://insight.sensiolabs.com/projects/c6f2e35b-2349-452e-b696-17849c5695e0) [![](https://codeclimate.com/github/vaibhavpandeyvpz/phemail/badges/gpa.svg)](https://codeclimate.com/github/vaibhavpandeyvpz/phemail/badges) [![](https://codeclimate.com/github/vaibhavpandeyvpz/phemail/badges/coverage.svg)](https://codeclimate.com/github/vaibhavpandeyvpz/phemail/badges) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/vaibhavpandeyvpz/phemail/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/vaibhavpandeyvpz/phemail/?branch=master) [![Coverage Status](https://coveralls.io/repos/github/vaibhavpandeyvpz/phemail/badge.svg?branch=master)](https://coveralls.io/github/vaibhavpandeyvpz/phemail?branch=master) [![Total Downloads](https://img.shields.io/packagist/dt/vaibhavpandeyvpz/phemail.svg?style=flat-square)](https://packagist.org/packages/vaibhavpandeyvpz/phemail) [![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\r\n\r\nInstall\r\n---\r\n```bash\r\ncomposer require vaibhavpandeyvpz/phemail\r\n```\r\n\r\nUsage\r\n---\r\n```php\r\n<?php\r\n\r\n$email = <<<EML\r\nMime-Version: 1.0\r\nMessage-Id: <6B7EC235-5B17-4CA8-B2B8-39290DEB43A3@vaibhavpandey.com>\r\nFrom: Vaibhav Pandey <contact@vaibhavpandey.com>\r\nTo: Vaibhav Pandey <me@vaibhavpandey.com>\r\nSubject: Testing simple email\r\nDate: Sat, 22 Nov 2008 15:04:59 +1100\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\nThis is simple as f*** plain text email message.\r\n\r\nRegards,\r\nVaibhav Pandey\r\nEML;\r\n\r\n\r\n$parser = new Phemail\\MessageParser();\r\n$message = $parser->parse($email);\r\n\r\necho $message->getHeaderValue('subject');\r\n# outputs 'Testing simple email'\r\n\r\necho $message->getHeaderValue('date');\r\n# outputs 'Sat, 22 Nov 2008 15:04:59 +1100'\r\n\r\necho $message->getHeaderValue('content-type');\r\n# outputs 'text/plain'\r\n\r\necho $message->getHeaderAttribute('content-type', 'charset');\r\n# outputs 'US-ASCII'\r\n\r\necho $message->getContents();\r\n\r\n/**\r\n * @desc To extract emails from headers, you could use any RFC 822\r\n *      internet address parser e.g., pear/mail.\r\n */\r\n$addresses = (new Mail_RFC822())->parseAddressList($message->getHeaderValue('to'));\r\nforeach ($addresses as $address) {\r\n    echo 'Name: ', $address->personal, '<br>', 'Email: ', $address->mailbox, '@', $address->host;\r\n}\r\n```\r\n\r\nLicense\r\n------\r\nSee [LICENSE.md](https://github.com/vaibhavpandeyvpz/phemail/blob/master/LICENSE.md) file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}